from car import Car
class Truck(Car):
    def __init__(self,color="Red", max_speed = 0, acceleration = 0, tyre_friction = 0, max_cargo_weight = 0):
        super().__init__(color, max_speed, acceleration, tyre_friction)
        self._max_cargo_weight = max_cargo_weight
        self._cargo_weight = 0
        
    @property
    def max_cargo_weight(self):
        return self._max_cargo_weight
        
    @property
    def cargo_weight(self):
        return self._cargo_weight
        
    def sound_horn(self):
        if self._is_engine_started == True:
            print("Honk Honk")
        else:
            print("Start the engine to sound_horn")
            
    def load(self,weight):
        if weight > 0:
            if self._current_speed == 0:
                if self._cargo_weight + weight <= self._max_cargo_weight:
                    self._cargo_weight += weight
                else:
                    print("Cannot load cargo more than max limit: {}".format(self._max_cargo_weight))
            else:
                print("Cannot load cargo during motion")
        else:
            raise ValueError("Invalid value for cargo_weight")
            
    def unload(self,weight):
        if weight > 0:
            if self._current_speed == 0:
                if self._cargo_weight + weight > 0:
                    self._cargo_weight -= weight
            else:
                print("Cannot unload cargo during motion")
        else:
            raise ValueError("Invalid value for cargo_weight")
