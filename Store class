class Item:
    def __init__(self,name, price, category):
        if type(name) is not str:
            raise ValueError("Invalid value for name, got {}".format(name))
        if price <= 0:
            raise ValueError("Invalid value for price, got {}".format(price))
        if type(category) is not str:
            raise ValueError("Invalid value for category, got {}".format(category))
        
        self._name = name
        self._price = price
        self._category = category
    
    @property
    def name(self):
        return self._name
    
    @property
    def price(self):
        return self._price
    
    @property
    def category(self):
        return self._category
        
    def __str__(self):
        return self._name+"@"+str(self._price)+"-"+self._category
        
class Query:
    def __init__(self,field, operation, value):
        list1 = ["IN","EQ","GT","GTE","LT","LTE","STARTS_WITH","ENDS_WITH","CONTAINS"]
        if operation not in list1:
           raise ValueError("Invalid value for operation, got {}".format(operation))
        self._field = field
        self._operation = operation
        self._value = value
    
    @property
    def field(self):
        return self._field
    @property 
    def operation(self):
        return self._operation
    
    @property 
    def value(self):
        return self._value
    
    def __str__(self):
        return str(self._field)+" "+str(self._operation)+" "+str(self._value)    

class Store:
    def __init__(self):
        self.items_list = []
    
    def add_item(self,item):
        self.items_list.append(item)
    
    def __str__(self):
        strng=""
        if len(self.items_list)==0:
            return "No items"
        else:
            for i in range(len(self.items_list)):
                strng=strng+str(self.items_list[i])
                if i!=len(self.items_list)-1:
                    strng=strng+"\n"
        return strng

    def filter(self,query):
        wish_list = Store()
        if query.operation == "IN":
            for item in self.items_list:
                if item.name in query.value:
                    wish_list.add_item(item)
                elif item.category in query.value:
                    wish_list.add_item(item)
                elif item.price in query.value:
                    wish_list.add_item(item)
        elif query.operation == "EQ":
            for item in self.items_list:
                if item.name == query.value:
                    wish_list.add_item(item)
                elif item.category == query.value:
                    wish_list.add_item(item)
                elif item.price == query.value:
                    wish_list.add_item(item)
        elif query.operation == "GT":
            for item in self.items_list:
                #print(query.value)
                if item.price > query.value:
                    wish_list.add_item(item)
        elif query.operation == "GTE":
            for item in self.items_list:
                if query.field== "price" and  item.price >= query.value:
                    wish_list.add_item(item)
        elif query.operation == "LT":
            for item in self.items_list:
                if item.price < query.value:
                    wish_list.add_item(item)
        elif query.operation == "LTE":
            for item in self.items_list:
                if query.field== "price" and  item.price <= query.value:
                    wish_list.add_item(item)
        elif query.operation == "STARTS_WITH":
            for item in self.items_list:
                if item.name.startswith(query.value):
                    wish_list.add_item(item)
                if item.category.startswith(query.value):
                    wish_list.add_item(item)
        elif query.operation == "ENDS_WITH":
            for item in self.items_list:
                if item.name.endswith(query.value):
                    wish_list.add_item(item)
                if item.category.endswith(query.value):
                    wish_list.add_item(item)
        elif query.operation == "CONTAINS":
            for item in self.items_list:
                if query.field== "name" and query.value in item.name:
                    wish_list.add_item(item)
                if query.field == "category" and query.value in  item.category:
                    wish_list.add_item(item)
        return wish_list
        
    def exclude(self,query):
        exclude_list = Store()
        filter_list = self.filter(query)
        for item in self.items_list:
            if item not in filter_list.items_list:
                exclude_list.add_item(item)
        return exclude_list
             
    def count(self):
        return len(self.items_list)
